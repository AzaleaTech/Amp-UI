# 用于前端组件仓库的gitlab-ci配置文件
# 以下变量在gitlab ci variables中定义
# NAMESPACE: 主仓库NAMESPACE
# NPM_REGISTRY: npm仓库地址
# NPM_TOKEN: npm用户凭证

image: node:14

stages:
  - publish
  - docs-build
  - docs-release

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  key: npm-cache
  paths:
    - node_modules/

release:
  stage: publish
  tags:
    - Frontend
  script:
    - npm install --registry=https://registry.npm.taobao.org/
    - npm config set registry $NPM_REGISTRY
    - npm run ci-publish
  rules:
    - if: '$CI_PROJECT_NAMESPACE == $NAMESPACE && $CI_COMMIT_REF_NAME =~ /^v.*/'
      when: on_success
    - when: never

docs-build:
  stage: docs-build
  tags:
    - Frontend
  script:
    - npm install --registry=https://registry.npm.taobao.org/
    - npm run docs:build
  artifacts:
    expire_in: 1 week
    name: '$CI_JOB_NAME'
    paths:
      - docs-dist
  rules:
    - if: '$CI_PROJECT_NAMESPACE == $NAMESPACE && $CI_COMMIT_REF_NAME =~ /^v.*/'
      when: on_success
    - when: never

docs-release:
  stage: docs-release
  tags:
    - Frontend
  dependencies:
    - docs-build
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$DEV_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - mkdir -p ./$CI_PROJECT_NAMESPACE/web
    - cp -r docs-dist/* ./$CI_PROJECT_NAMESPACE/web
    - scp -r ./$CI_PROJECT_NAMESPACE $DEV_USER@$DEV_HOST:~
  rules:
    - if: '$CI_PROJECT_NAMESPACE == $NAMESPACE && $CI_COMMIT_REF_NAME =~ /^v.*/'
      when: on_success
    - when: never
